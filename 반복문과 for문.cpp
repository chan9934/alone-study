/// 반복문
//반복문이랑 프로그램 내에서 똑같은 명령을 일정 횟수만큼 반복하여 수행하도록 제어하는 명령문이다 프로그램이 처리하는 대부분의 코드는 반복적인 형태가 많으므로, 가장 많이 사용되는 제어문이다
//
//C++에서 사용되는 대표적인 반복문의 형태는
//while
//do / while
//for
//범위기반의 for
//
//while문
//while문은 특정 조건을 만족할 때까지 계속해서 주어진 명령문을 반복 실행한다
//C++에서 While 문의 문법은 다음과 같다
//While[조건식]
//[
//	조건식으 ㅣ결과가 참인 동안 반복적으로 실행하고자 하는 명령문;
//]
//
// while 문은 우선 조건식이 참인지를 판단하여 참이면 내부의 명령문을 실행한다
//	 내부의 명령문을 전부 실행하고 나면 다시 조건식으로 돌아와 또 한번참인지를 판단한다
//	 이렇게 표현식으 ㅣ검사를 통해 반복해서 실행되는 반복문을 루프라고한다
//


#include <iostream>


using namespace std;

//int main()
//{
//
//	int i = 0, num = 5;
//
//	while (i < num)
//	{
//		cout << "while 문이 현재 " << i + 1 << " 번째 반복 실행중입니다." << endl;
//		i++;
//	}
//	
//	cout << "while 문이 종료된 후 변수 i의 값은 " << i << "입니다." << endl;
//	return 0;
//
//}

//do/while문
//while문은 루프에 진입하기 전에 먼저 조건식부터 검사한다
//하지만 do/ while문은 먼저 루프를 한 번 실행한 후에 조건식을 검사한다
//즉 do/ while문은 조건식으 ㅣ결과와 상관없이 무조건 한번은 루프를 실행한다
//do
//{
//	조건식으 ㅣ결과가 참인 동안 반복적으로 실행하고자 하는 명령문;
//} while (조건식);
//
//int main()
//{
//	int i = 0, num = 3;
//	do
//	{
//		cout << "do / while 문이 현재 " << i + 1 << " 번째 반복 수행중입니다." << endl;
//		i++;
//	} while (i > num);
//	cout << "do / while 문이 종료된 후 변수 i의 값은 " << i << "입니다." << endl;
//	return 0;
//}
//for문
//for문은 while 문과는 달리 자체적으로 초기식, 조건식, 증감식을 모두 포함하고 있는 반복문이다
//따라서 while 문보다는 좀더 간결하게 반복문을 표현할수있다
//
//for(초기식; 조건식; 증감식)
//각각 생략 가능


//int main()
//{
//
//	int i = 0, num = 5;
//
//	for (i = 0; i < num; i++)
//
//	{
//		cout << "for 문이 현재 " << i + 1 << " 번째 반복 실행중입니다." << endl;
//		i++;
//	}
//	
//	cout << "for 문이 종료된 후 변수 i의 값은 " << i << "입니다." << endl;
//	return 0;
//
//}

//int main()
//{
//
//	
//	for (int i = 0, num = 5; i < num; i++)
//
//	{
//		cout << "for 문이 현재 " << i + 1 << " 번째 반복 실행중입니다." << endl;
//
//		
//	}
//
//	return 0;
//
//}

//번위기반의 for문
//표현식 안에 포함되어 있는 모든 값에 대해 한번씩 루프를 실행해준다
//이러한 범위 기반의 for 문은 배열을 자동으로 이식하며 컨테이너 클래스에 많이 사용된다
//
//int main()
//{
//	int arr[5] = { 1, 3, 5, 7 ,9 };
//
//	for (int element : arr)
//	{
//		cout << element << " ";
//
//	}
//	return 0;
//}